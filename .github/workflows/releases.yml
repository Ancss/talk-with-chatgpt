name: GitHub Release

on:
  push:
    tags:
      - "v*" # 发布标签以“v”开头

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get latest tag
        id: latest_tag
        run: |
          git fetch --prune --unshallow
          git describe --tags $(git rev-list --tags --max-count=1)
        env:
          GITHUB_TAG: ${{ steps.latest_tag.outputs.stdout }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm install pnpm -g && pnpm i

      - name: Clean build directory
        run: rm -rf build/*

      - name: Build
        run: pnpm run build:all

      - name: Install zip
        run: sudo apt-get install zip

      - name: Compress and Rename
        run: |
          for subdir in build/*; do
            if [ -d "$subdir" ]; then
              # Compress and rename the subdirectory
              # cd "$subdir" && zip -r "../$(basename "$subdir")-${{ env.GITHUB_TAG }}.zip" . && cd ..
              zip -r -9 "$subdir.zip" "$subdir"
              mv "$subdir.zip" "${subdir}-${{ env.GITHUB_TAG }}.zip"
            fi
          done
      # 将要发布的文件作为 artifact 上传到 GitHub
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: extensionsZip
          path: build/*.zip

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2


      # 下载 npm-build 工作流程的 artifact
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: extensionsZip
          path: build/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          tag_name: ${{ env.GITHUB_TAG }}
          release_name: Release ${{ env.GITHUB_TAG }}
          body: "Release of version ${{ env.GITHUB_TAG }}"
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/*
          asset_content_type: application/zip
